// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
}

// Media queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

@mixin respond-below($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: ($breakpoint-sm - 1px)) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: ($breakpoint-md - 1px)) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: ($breakpoint-lg - 1px)) { @content; }
  } @else if $breakpoint == xl {
    @media (max-width: ($breakpoint-xl - 1px)) { @content; }
  }
}

// Typography
@mixin heading-1 {
  font-family: $font-secondary;
  font-size: $font-size-3xl;
  font-weight: 700;
  line-height: 1.2;
  color: $text-title;
}

@mixin heading-2 {
  font-family: $font-secondary;
  font-size: $font-size-2xl;
  font-weight: 600;
  line-height: 1.3;
  color: $text-title;
}

@mixin heading-3 {
  font-family: $font-secondary;
  font-size: $font-size-xl;
  font-weight: 600;
  line-height: 1.4;
  color: $text-title;
}

@mixin body-text {
  font-family: $font-primary;
  font-size: $font-size-base;
  font-weight: 400;
  line-height: 1.6;
  color: $text-body;
}

@mixin small-text {
  font-family: $font-primary;
  font-size: $font-size-sm;
  font-weight: 400;
  line-height: 1.5;
  color: $text-body;
}

// Effects
@mixin card-shadow {
  box-shadow: $shadow-light;
  transition: box-shadow $transition-speed ease;
  
  &:hover {
    box-shadow: $shadow-medium;
  }
}

@mixin card-shadow-large {
  box-shadow: $shadow-medium;
  transition: box-shadow $transition-speed ease;
  
  &:hover {
    box-shadow: $shadow-large;
  }
}

@mixin truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Button styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-lg;
  border-radius: $border-radius;
  font-weight: 500;
  cursor: pointer;
  transition: all $transition-speed ease;
  text-decoration: none;
  border: none;
  font-family: $font-primary;
}

@mixin button-primary {
  @include button-base;
  background-color: $primary-color;
  color: $text-light;
  
  &:hover, &:focus {
    background-color: $primary-dark;
    transform: translateY(-1px);
  }
  
  &:active {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: $primary-color;
  border: 1px solid $primary-color;
  
  &:hover, &:focus {
    background-color: rgba($primary-color, 0.1);
    transform: translateY(-1px);
  }
  
  &:active {
    transform: translateY(0);
  }
}

// Form elements
@mixin input-base {
  width: 90%;
  padding: $spacing-sm $spacing-md;
  border: 1px solid lighten($text-muted, 20%);
  border-radius: $border-radius-sm;
  background-color: $background-white;
  font-family: $font-primary;
  font-size: $font-size-base;
  transition: all $transition-speed ease;
  
  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 2px rgba($primary-color, 0.2);
  }
}

// Animation
@mixin fadeIn($duration: 0.3s) {
  animation: fadeIn $duration ease-in forwards;
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
}

@mixin slideIn($direction: 'right', $distance: 20px, $duration: 0.3s) {
  @if $direction == 'right' {
    animation: slideInRight $duration ease-out forwards;
    
    @keyframes slideInRight {
      from { 
        opacity: 0;
        transform: translateX($distance); 
      }
      to { 
        opacity: 1;
        transform: translateX(0); 
      }
    }
  } @else if $direction == 'left' {
    animation: slideInLeft $duration ease-out forwards;
    
    @keyframes slideInLeft {
      from { 
        opacity: 0;
        transform: translateX(-$distance); 
      }
      to { 
        opacity: 1;
        transform: translateX(0); 
      }
    }
  } @else if $direction == 'up' {
    animation: slideInUp $duration ease-out forwards;
    
    @keyframes slideInUp {
      from { 
        opacity: 0;
        transform: translateY($distance); 
      }
      to { 
        opacity: 1;
        transform: translateY(0); 
      }
    }
  } @else if $direction == 'down' {
    animation: slideInDown $duration ease-out forwards;
    
    @keyframes slideInDown {
      from { 
        opacity: 0;
        transform: translateY(-$distance); 
      }
      to { 
        opacity: 1;
        transform: translateY(0); 
      }
    }
  }
}